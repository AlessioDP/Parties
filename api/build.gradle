apply plugin: 'maven-publish'

dependencies {
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.14.3-R0.1-SNAPSHOT'
    compileOnly group: 'org.bukkit', name: 'bukkit', version: '1.14.3-R0.1-SNAPSHOT'
    compileOnly group: 'net.md-5', name: 'bungeecord-api', version: '1.14-SNAPSHOT'
    compileOnly 'org.checkerframework:checker-qual:2.9.0' // Null checkers
}

javadoc {
    options.docTitle = project.ext.pluginName + ' ' + project.version + ' API'
    options.windowTitle = options.docTitle
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                url = 'https://alessiodp.com/'
                licenses {
                    license {
                        name = 'AGPL-3.0'
                        url = 'https://www.gnu.org/licenses/agpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'AlessioDP'
                        email = 'me@alessiodp.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/AlessioDP/Parties.git'
                    developerConnection = 'scm:git:git@github.com:AlessioDP/Parties.git'
                    url = 'http://github.com/AlessioDP/Parties'
                }
                ciManagement {
                    system = 'Jenkins'
                    url = 'https://ci.codemc.org/job/AlessioDP/job/Parties/'
                }
            }
        }
    }
    repositories {
        mavenLocal()
        if (project.hasProperty('mavenUsername') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUsername
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.codemc.org/repository/maven-releases/'
                def snapshotsRepoUrl = 'https://repo.codemc.org/repository/maven-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}